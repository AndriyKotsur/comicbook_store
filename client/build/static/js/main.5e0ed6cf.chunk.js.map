{"version":3,"sources":["middleware/authRequired.js","pages/product-register/product-register.js","store/action-types.js","store/reducers.js","store/store.js","store/action-creators.js","pages/product-register/index.js","pages/product-login/product-login.js","pages/product-login/index.js","components/products-list/index.js","components/products-list/products-list.js","components/search-list/search-list.js","components/search-list/index.js","pages/products-viewer/index.js","pages/products-viewer/products-viewer.js","components/product-list/index.js","components/product-list/product-list.js","pages/product-viewer/product-viewer.js","pages/product-viewer/index.js","pages/product-search/index.js","pages/product-search/product-search.js","components/profile-list/profile-list.js","pages/product-profile/product-profile.js","pages/product-profile/index.js","components/cart-list/index.js","components/cart-list/cart-list.js","pages/product-cart/product-cart.js","pages/product-cart/index.js","pages/product-add/index.js","pages/product-add/product-add.js","pages/product-edit/index.js","pages/product-edit/product-edit.js","pages/product-main/product-main.js","pages/product-main/index.js","App.js","serviceWorker.js","index.js"],"names":["authRequired","ProtectedComponent","Authorized","localStorage","token","this","props","history","push","Component","withRouter","ProductRegister","onChange","e","setState","target","name","value","onSubmit","a","preventDefault","state","email","password","newUser","axios","post","response","setUser","data","isError","className","type","required","message","to","UserTypes","SET_USER","GET_USER","UNSET_USER","userReducers","action","setItem","payload","isAuthorized","getItem","removeItem","createStore","getUser","unSetUser","ConnectedRegister","connect","store","ProductLogin","user","minLength","maxLength","ConnectedLogin","ProductsList","products","showInfo","length","map","product","key","_id","src","image","title","price","onClick","SearchList","searchProduct","searchKey","searchInput","current","trim","React","createRef","ref","ProductsViewer","productId","get","ProductList","addCart","description","ProductViewer","tokenCheck","userId","match","params","JSON","stringify","ProductSearch","location","search","ProfileList","editProduct","deleteProduct","ProductProfile","id","delete","profile","CartList","ProductCart","cart","ProductAdd","onImageChange","file","files","config","headers","formData","FormData","append","bind","ProductEdit","titleInput","priceInput","descriptionInput","put","Main","logOut","alt","path","exact","component","ConnectedMain","App","Boolean","window","hostname","interceptors","request","use","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.5e0ed6cf.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\n\r\nexport default function authRequired(ProtectedComponent) {\r\n    class Authorized extends Component {\r\n        componentDidMount() {\r\n            if(!localStorage.token) {\r\n                this.props.history.push('/sign-in');\r\n            }\r\n        };\r\n\r\n        getSnapshotBeforeUpdate() {\r\n             if(!localStorage.token) {\r\n                 this.props.history.push('/sign-in')\r\n             }\r\n        };\r\n\r\n        componentDidUpdate() {\r\n            if(!localStorage.token) {\r\n                this.props.history.push('/sign-in')\r\n            }\r\n        };\r\n\r\n        render() { \r\n            return ( \r\n                <ProtectedComponent {...this.props} />\r\n             );\r\n        }\r\n    }\r\n     \r\n    return withRouter(Authorized);\r\n}","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { withRouter, Link } from 'react-router-dom';\r\nimport './product-register.css';\r\n\r\n\r\nclass ProductRegister extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            name: '',\r\n            email: '',\r\n            password: '',\r\n            isError: ''\r\n         }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    };\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const {name, email, password} = this.state;\r\n\r\n        const newUser = {\r\n            'name': name,\r\n            'email': email,\r\n            'password': password\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`/user/sign-up`, newUser);\r\n            this.props.setUser(response.data.token);\r\n            this.props.history.push('/');\r\n\r\n        } catch (err) {\r\n            this.setState({\r\n                isError: err.response.data\r\n            })\r\n        }\r\n    };  \r\n\r\n    render() { \r\n        const { isError } = this.state;\r\n\r\n        return ( \r\n            <Fragment>\r\n                <div className=\"product__register\">\r\n                    <form onSubmit={this.onSubmit} className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Name</label>\r\n                            <input type=\"text\" name=\"name\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Email</label>\r\n                            <input type=\"email\" name=\"email\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Password</label>\r\n                            <input type=\"password\" name=\"password\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        {\r\n                            isError && (\r\n                            <p className=\"form-error\">{isError.message}</p>\r\n                            )\r\n                        }\r\n                        <input type=\"submit\" value=\"Submit\" className=\"form-submit\"/>\r\n\r\n                        <p className=\"form-warning\">Already registered?<Link to=\"/sign-in\" className=\"form-link\">Sign in</Link></p>\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n         );\r\n    }\r\n};\r\n \r\nexport default withRouter(ProductRegister);","const UserTypes = {\r\n    SET_USER: 'SET_USER',\r\n    GET_USER: 'GET_USER',\r\n    UNSET_USER: 'UNSET_USER'\r\n}\r\n\r\nexport default UserTypes;","import UserTypes from './action-types';\r\n\r\nconst userReducers = (state, action) => {\r\n    switch (action.type) {\r\n        case UserTypes.SET_USER:\r\n            localStorage.setItem('token', action.payload)\r\n            return {\r\n                isAuthorized: true\r\n            }\r\n            case UserTypes.GET_USER:\r\n                if (localStorage.getItem('token')) {\r\n                    return {\r\n                        isAuthorized: true\r\n                    }\r\n                } else {\r\n                    return {\r\n                        isAuthorized: false\r\n                    }\r\n                }\r\n                case UserTypes.UNSET_USER:\r\n                    localStorage.removeItem('token')\r\n                    return {\r\n                        isAuthorized: false\r\n                    }\r\n                    default:\r\n                        return state;\r\n    }\r\n};\r\n\r\nexport default userReducers;","import {createStore} from 'redux';\r\nimport userReducers from './reducers';\r\n\r\nlet initialStore = {\r\n    isAuthorized: false\r\n};\r\n\r\nexport default createStore(userReducers, initialStore);","import UserTypes from './action-types';\r\n\r\nexport function setUser(token) {\r\n    return {\r\n        type: UserTypes.SET_USER,\r\n        payload: token\r\n    }\r\n};\r\n\r\nexport function getUser() {\r\n    return {\r\n        type: UserTypes.GET_USER\r\n    }\r\n};\r\n\r\nexport function unSetUser() {\r\n    return {\r\n        type: UserTypes.UNSET_USER\r\n    }\r\n};","import React from 'react';\r\nimport ProductRegister from './product-register';\r\n\r\nimport {Provider, connect} from 'react-redux';\r\n\r\nimport store from '../../store/store';\r\nimport {setUser} from '../../store/action-creators';\r\n\r\nlet ConnectedRegister = connect(null, {setUser})(ProductRegister);\r\n\r\nexport default () => (\r\n    <Provider store={store}>\r\n        <ConnectedRegister />\r\n    </Provider>\r\n);","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './product-login.css'\r\n\r\nclass ProductLogin extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            email: '',\r\n            password: '',\r\n            isError: ''\r\n         }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        });\r\n    };\r\n\r\n    onSubmit = async (e) => {\r\n        \r\n        e.preventDefault();\r\n\r\n        const {email, password, isError} = this.state;\r\n        const user = {\r\n            'email': email,\r\n            'password': password\r\n        };\r\n\r\n        try {\r\n            const response = await axios.post(`/user/sign-in`, user);\r\n            this.props.setUser(response.data.token);\r\n            this.props.history.push('/');\r\n            \r\n        } catch (err) {\r\n            this.setState({\r\n                isError: err.response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isError } = this.state;\r\n\r\n        return ( \r\n            <Fragment>\r\n                <div className=\"product__login\">\r\n                    <form onSubmit={this.onSubmit} className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Email</label>\r\n                            <input type=\"email\" name=\"email\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Password</label>\r\n                            <input type=\"password\" name=\"password\" minLength=\"1\" maxLength=\"15\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Submit\" className=\"form-submit\"/>\r\n                    </form>\r\n                    {\r\n                        isError && (\r\n                        <p className=\"form-error\">{isError.message}</p>\r\n                        )\r\n                    }\r\n                    <p className=\"form-warning\">Already have an account?<Link to=\"/sign-up\" className=\"form-link\">Sign up</Link></p>\r\n                </div>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(ProductLogin);","import React, { Component } from 'react';\r\nimport ProductLogin from './product-login';\r\n\r\nimport {Provider, connect} from 'react-redux';\r\n\r\nimport store from '../../store/store';\r\nimport {setUser} from '../../store/action-creators';\r\n\r\nlet ConnectedLogin = connect(null, {setUser})(ProductLogin);\r\n\r\nexport default () => (\r\n    <Provider store={store}>\r\n        <ConnectedLogin />\r\n    </Provider>\r\n);","import ProductsList from './products-list';\r\nexport default ProductsList;","import React, {Fragment} from 'react';\r\nimport './products-list.css';\r\n\r\nconst ProductsList = ({products, showInfo}) => {\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"products__inner\">\r\n                {\r\n                    (products && products.length) ? (\r\n                        \r\n                        products.map((product) => (\r\n                            <div key={product._id} className=\"products__item\">\r\n                                <div className=\"products__content\">\r\n                                    <img src={product.image} className=\"products__image\"/>\r\n                                    <h3 className=\"products__title\">{product.title}</h3>\r\n                                    <span className=\"products__price\">{product.price} $</span>\r\n                                    <button type=\"button\" className=\"products__btn\" onClick={() => showInfo(product._id)}>Details</button>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ):<span className=\"products__warning text-warning\">Loading...</span>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductsList;","import React, { Component, Fragment } from 'react';\r\nimport {withRouter} from 'react-router-dom';\r\nimport './search-list.css';\r\n\r\nclass SearchList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n        this.searchInput = React.createRef();\r\n    }\r\n\r\n    searchProduct = (e) => {\r\n        e.preventDefault();\r\n\r\n        const searchKey = this.searchInput.current.value.trim();\r\n\r\n        if(searchKey === '') {\r\n            return false\r\n        } else {\r\n            this.props.history.push(`/search?search=${searchKey}`)\r\n        }\r\n    }\r\n\r\n    render() { \r\n        return ( \r\n            <Fragment>\r\n                <div className=\"search__inner\">\r\n                    <form onSubmit={this.searchProduct} className=\"search__form\">\r\n                        <div className=\"search__group\">\r\n                            <label className=\"search__label\">Search</label>\r\n                            <input type=\"search\" name=\"search\" className=\"search\" ref={this.searchInput} className=\"search__input\" />\r\n                        </div>\r\n                            <input type=\"submit\" value=\"Submit\" className=\"search__submit\" />\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default withRouter(SearchList);","import SearchList from './search-list';\r\nexport default SearchList;","import ProductsViewer from './products-viewer';\r\nexport default ProductsViewer;","import React, { Component, Fragment } from 'react';\r\nimport ProductList from '../../components/products-list';\r\nimport SearchList from '../../components/search-list';\r\nimport axios from 'axios';\r\nimport './products-viewer.css';\r\n\r\nclass ProductsViewer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            products: []\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const products = await axios.get('/product');\r\n\r\n            this.setState({\r\n                products: products.data\r\n            })\r\n        } catch (err) {\r\n            throw err;\r\n        }\r\n    };\r\n\r\n    showInfo = (productId) => {\r\n        this.props.history.push(`/product/${productId}`)\r\n    };\r\n\r\n    render() { \r\n        const {products} = this.state;\r\n        \r\n        return ( \r\n            <Fragment>\r\n                <SearchList />\r\n                <ProductList products={products} showInfo={this.showInfo} />\r\n            </Fragment>\r\n         );\r\n    }\r\n};\r\n \r\nexport default ProductsViewer;","import ProductList from './product-list';\r\nexport default ProductList;","import React, {Fragment} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './product-list.css';\r\n\r\nconst ProductList = ({product, addCart, isAuthorized}) => {\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"product__inner\">\r\n                {\r\n                    product && (\r\n                    <div key={product._id} className=\"product__item\">\r\n                        <img src={product.image} className=\"product__image\"/>\r\n                        <div className=\"product__content\">\r\n                            <h3 className=\"product__title\">{product.title}</h3>\r\n                            <span className=\"product__price\">{product.price} $</span>\r\n                            <p className=\"product__description\">{product.description}</p>\r\n                            {\r\n                                !isAuthorized ?\r\n                                    <Link to=\"/sign-in\" className=\"product__warning text-warning\">Sign in to add comic book to the cart</Link>\r\n                                :\r\n                                <>\r\n                                    <button type=\"button\" className=\"product__btn\" onClick={() => addCart()}>Add cart</button>\r\n                                </>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    )\r\n                }\r\n                {\r\n                    !product && (\r\n                        <span className=\"product__loading text-warning\">Loading...</span>\r\n                    )\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProductList;","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport ProductList from '../../components/product-list';\r\nimport  { getUser, unSetUser } from '../../store/action-creators';\r\nimport { connect } from 'react-redux';\r\nimport './product-viewer.css';\r\n\r\nclass ProductViewer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            userId: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const productId = this.props.match.params.productId;\r\n            const product = await axios.get(`/product/${productId}`);\r\n            \r\n            this.setState({\r\n                product: product.data\r\n            })\r\n        } catch (err) {\r\n            this.props.unSetUser()\r\n        }\r\n    };\r\n\r\n    tokenCheck = async () => {\r\n        try {\r\n            const user = await axios.get('/user');\r\n\r\n            this.setState({\r\n                userId: user.data\r\n            })\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    };\r\n\r\n    addCart = async () => {\r\n        try {\r\n            await this.tokenCheck();\r\n            const productId = this.props.match.params.productId;\r\n            const { userId } = this.state;\r\n            const user = JSON.stringify(userId);\r\n            \r\n            axios.post(`/cart/${productId}`, userId);\r\n\r\n            this.props.history.push('/cart');\r\n            \r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    };\r\n\r\n    render() { \r\n        this.props.getUser();\r\n        const { product } = this.state;\r\n        const { isAuthorized } = this.props;\r\n        \r\n        return ( \r\n            <Fragment>\r\n                <ProductList product={product} addCart={this.addCart} isAuthorized={isAuthorized}/>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthorized: state.isAuthorized\r\n    }\r\n}\r\n \r\nexport default connect(mapStateToProps, { getUser, unSetUser })(ProductViewer);","import ProductViewer from './product-viewer';\r\nexport default ProductViewer;","import ProductSearch from './product-search';\r\nexport default ProductSearch;","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport ProductsList from '../../components/products-list';\r\n\r\nclass ProductSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            products: []\r\n         }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n          const products = await axios.post(`/product/search${this.props.location.search}`)\r\n          \r\n          this.setState({\r\n            products: products.data\r\n          })\r\n\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    showInfo = (productId) => {\r\n        this.props.history.push(`/product/${productId}`)\r\n    };\r\n                \r\n\r\n    render() { \r\n        const { products } = this.state;\r\n        return ( \r\n            <Fragment>\r\n                <ProductsList products={products} showInfo={this.showInfo} />\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProductSearch;","import React, { Component, Fragment } from 'react';\r\nimport './profile-list.css';\r\n\r\nconst ProfileList = ({products, editProduct, deleteProduct}) => {\r\n\r\n    return(\r\n        <Fragment>\r\n            <div className=\"profile__inner\">\r\n                {\r\n                    (products && products.length) ? (\r\n\r\n                        products.map((product) => (\r\n                            <div key={product._id} className=\"profile__item\">\r\n                                <div className=\"profile__content\">\r\n                                    <img src={product.image} className=\"profile__image\"/>\r\n                                    <h3 className=\"profile__title\">{product.title}</h3>\r\n                                    <span className=\"profile__price\">{product.price} $</span>\r\n                                    <div className=\"profile__group\">\r\n                                        <button type=\"button\" className=\"profile__btn\" onClick={() => editProduct(product._id)}>Edit</button>\r\n                                        <button type=\"button\" className=\"profile__btn\" onClick={() => deleteProduct(product._id)}>Delete</button>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ): <span className=\"profile__downloading text-warning\">There is no products in the profile</span>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default ProfileList;","import React, { Component, Fragment } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport ProfileList from '../../components/profile-list/profile-list';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux'\r\nimport { unSetUser } from '../../store/action-creators';\r\nimport './product-profile.css';\r\n\r\nclass ProductProfile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            userId: ''\r\n         }\r\n    }\r\n\r\n    tokenCheck = async () => {\r\n        try {\r\n            const user = await axios.get('/user');\r\n            \r\n            this.setState({\r\n                userId: user.data.id\r\n            })\r\n\r\n        } catch (err) {\r\n            this.props.unSetUser()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.tokenCheck();\r\n            const { userId } = this.state;\r\n            const profile = await axios.get(`/profile/${userId}`);\r\n\r\n            this.setState({\r\n                products: profile.data\r\n            })\r\n            \r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    editProduct = async (productId) => {\r\n        await this.tokenCheck();\r\n        this.props.history.push(`/edit/${productId}`)\r\n    }\r\n\r\n    deleteProduct = async (productId) => {\r\n        try {\r\n            await this.tokenCheck();\r\n            await axios.delete(`/profile/${productId}`);\r\n            const { userId } = this.state;\r\n\r\n            const products = await axios.get(`/profile/${userId}`);\r\n\r\n            this.setState({\r\n                products: products.data\r\n            });\r\n            this.props.history.push('/profile')\r\n\r\n        } catch (err) {\r\n            \r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { products } = this.state;\r\n\r\n        return ( \r\n            <Fragment>\r\n                <Link to='/add' className=\"profile__add\">Add comic book</Link>\r\n                {   \r\n                    products && (\r\n                        <ProfileList products={products} editProduct={this.editProduct} deleteProduct={this.deleteProduct} />\r\n                    )\r\n                }\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default connect(null, { unSetUser })(ProductProfile);","import ProductProfile from './product-profile';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(ProductProfile);","import CartList from './cart-list';\r\nexport default CartList;","import React, { Component, Fragment } from 'react';\r\nimport './cart-list.css';\r\n\r\nconst CartList = ({products, deleteProduct}) => {\r\n    return(\r\n        <Fragment>\r\n            <div className=\"cart__inner\">\r\n                {\r\n                    (products && products.length) ? (\r\n                        products.map((product) => (\r\n                            <div key={product._id} className=\"cart__item\">\r\n                                <img src={product.image} className=\"cart__image\"/>\r\n                                <div className=\"cart__content\">\r\n                                    <h3 className=\"cart__title\">{product.title}</h3>\r\n                                    <span className=\"cart__price\">{product.price} $</span>\r\n                                    <button type=\"button\" className=\"cart__btn\" onClick={() => deleteProduct(product._id)}>Delete</button>\r\n                                </div>\r\n                            </div>\r\n                        ))\r\n                    ): <span className=\"cart__downloading text-warning\">There is no comic books in the cart</span>\r\n                }\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default CartList;","import React, { Component, Fragment } from 'react';\r\nimport CartList from '../../components/cart-list';\r\nimport axios from 'axios';\r\nimport { connect } from 'react-redux';\r\nimport { unSetUser } from '../../store/action-creators';\r\nimport './product-cart.css';\r\n\r\nclass ProductCart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            userId: ''\r\n         }\r\n    }\r\n\r\n    tokenCheck = async () => {\r\n        try {\r\n            const user = await axios.get('/user');\r\n\r\n            this.setState({\r\n                userId: user.data.id\r\n            })\r\n        } catch (err) {\r\n            this.props.unSetUser()\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            await this.tokenCheck();\r\n            const { userId } = this.state;\r\n            const cart = await axios.get(`/cart/${userId}`)\r\n\r\n            this.setState({\r\n                products: cart.data\r\n            })\r\n\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    deleteProduct = async (productId) => {\r\n        try {\r\n            await this.tokenCheck();\r\n            await axios.delete(`/cart/${productId}`);\r\n            const { userId } = this.state;\r\n\r\n            const cart = await axios.get(`/cart/${userId}`);\r\n\r\n            this.setState({\r\n                products: cart.data\r\n            })\r\n\r\n            this.props.history.push('/cart')\r\n\r\n        } catch (err) {\r\n            throw err\r\n        }\r\n    }\r\n\r\n    render() { \r\n        const { products } = this.state;\r\n        \r\n        return ( \r\n            <Fragment>\r\n                {\r\n                    products && (\r\n                        <CartList products={products} deleteProduct={this.deleteProduct} />\r\n                    )\r\n                }\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default connect(null, { unSetUser })(ProductCart);","import ProductCart from './product-cart';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nexport default withRouter(ProductCart);","import ProductAdd from './product-add';\r\nexport default ProductAdd;","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport './product-add.css';\r\n\r\nclass ProductAdd extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { \r\n            title: '',\r\n            price: null,\r\n            description: '',\r\n            file: null,\r\n            isError: ''\r\n         }\r\n\r\n        this.onChange.bind(this);\r\n        this.onImageChange.bind(this);\r\n        this.onSubmit.bind(this);\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    onImageChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        };\r\n\r\n        const formData = new FormData();\r\n        formData.append('title', this.state.title);\r\n        formData.append('price', this.state.price);\r\n        formData.append('description', this.state.description);\r\n        formData.append('image', this.state.file);\r\n\r\n        try {\r\n            const response = await axios.post('/profile/product/add', formData, config);\r\n            this.props.history.push('/profile');\r\n\r\n        } catch (err) {\r\n            this.setState({\r\n                isError: err.response.data\r\n            })\r\n        }\r\n    }\r\n    \r\n    render() { \r\n        const { isError } = this.state;\r\n        \r\n        return ( \r\n            <Fragment>\r\n                <div className=\"product__add\">\r\n                    <form onSubmit={this.onSubmit} className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Title</label>\r\n                            <input type=\"text\" name=\"title\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Price</label>\r\n                            <input type=\"number\" name=\"price\" minLength=\"1\" maxLength=\"15\" onChange={this.onChange} className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Description</label>\r\n                            <textarea onChange={this.onChange} name=\"description\" className=\"form-textarea\"></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Image</label>\r\n                            <input onChange={this.onImageChange} type=\"file\" name=\"image\" className=\"form-input\" />\r\n                        </div>\r\n                        {\r\n                            isError && (\r\n                            <p className=\"form-error\">{isError.message}</p>\r\n                            )\r\n                        }\r\n                        <input type=\"submit\" value=\"Submit\" className=\"form-submit\"/>\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProductAdd;","import ProductEdit from './product-edit';\r\nexport default ProductEdit;","import React, { Component, Fragment } from 'react';\r\nimport axios from 'axios';\r\nimport './product-edit.css';\r\n\r\nclass ProductEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            file: null,\r\n            isError: ''\r\n        }\r\n\r\n         this.titleInput = React.createRef();\r\n         this.priceInput = React.createRef();\r\n         this.descriptionInput = React.createRef();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const productId = this.props.match.params.productId;\r\n\r\n        try {\r\n            const product = await axios.get(`/profile/product/${productId}`);\r\n            \r\n            this.titleInput.current.value = product.data.title;\r\n            this.priceInput.current.value = product.data.price;\r\n            this.descriptionInput.current.value = product.data.description;\r\n            \r\n        } catch (err) {\r\n            this.setState({\r\n                isError: err.response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    onImageChange = (e) => {\r\n        this.setState({\r\n            file: e.target.files[0]\r\n        })\r\n    }\r\n\r\n    onSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        const formData = new FormData();\r\n\r\n        formData.append('title', this.titleInput.current.value);\r\n        formData.append('price', this.priceInput.current.value);\r\n        formData.append('description', this.descriptionInput.current.value);\r\n        formData.append('image', this.state.file);\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"multipart/form-data\"\r\n            }\r\n        }\r\n\r\n        try {\r\n            const productId = this.props.match.params.productId;\r\n            \r\n            await axios.put(`/profile/product/edit/${productId}`, formData, config);\r\n            this.props.history.push('/profile');\r\n\r\n        } catch (err) {\r\n            this.setState({\r\n                isError: err.response.data\r\n            })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { isError } = this.state;\r\n\r\n        return ( \r\n            <Fragment>\r\n                <div className=\"product__edit\">\r\n                    <form onSubmit={this.onSubmit} className=\"form\">\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Title</label>\r\n                            <input ref={this.titleInput} type=\"text\" name=\"title\" className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Price</label>\r\n                            <input ref={this.priceInput} type=\"number\" name=\"price\" minLength=\"1\" maxLength=\"15\" className=\"form-input\" required/>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Description</label>\r\n                            <textarea ref={this.descriptionInput} name=\"description\" className=\"form-textarea\"></textarea>\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label className=\"form-label\">Image</label>\r\n                            <input onChange={this.onImageChange} type=\"file\" name=\"image\" className=\"form-input\" required />\r\n                        </div>\r\n                        {\r\n                            isError && (\r\n                            <p className=\"form-error\">{isError.message}</p>\r\n                            )\r\n                        }\r\n                        <input type=\"submit\" value=\"Submit\" className=\"form-submit\"/>\r\n                    </form>\r\n                </div>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default ProductEdit;","import React, { Component, Fragment } from 'react';\r\nimport { Link, Route, Switch } from 'react-router-dom';\r\nimport authRequired from '../../middleware/authRequired';\r\nimport './product-main.css'\r\n\r\nimport ProductRegister from '../product-register';\r\nimport ProductLogin from '../product-login';\r\nimport ProductsViewer from '../products-viewer';\r\nimport ProductViewer from '../product-viewer';\r\nimport ProductSearch from '../product-search';\r\nimport ProductProfile from '../product-profile';\r\nimport ProductCart from '../product-cart';\r\nimport ProductAdd from '../product-add';\r\nimport ProductEdit from '../product-edit';\r\n\r\nclass Main extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {  }\r\n    }\r\n    \r\n    logOut = () => {\r\n        this.props.unSetUser();\r\n    };\r\n\r\n    render() { \r\n        this.props.getUser();\r\n        const {isAuthorized} = this.props;\r\n\r\n        return (\r\n            <Fragment>\r\n                <header className=\"header\">\r\n                    <div className=\"header__inner\">\r\n                        <Link to=\"/\" className=\"header__logotype\">\r\n                            <img src=\"/assets/comic-book.svg\" alt=\"Comic book store logotype\" />\r\n                        </Link>\r\n                        {\r\n                            !isAuthorized ? (\r\n                                <nav className=\"header__action\">\r\n                                    <Link to=\"/sign-up\" className=\"header__action-register\">\r\n                                        Sign Up\r\n                                    </Link>\r\n                                    <Link to=\"/sign-in\" className=\"header__action-login\">\r\n                                        Sign In\r\n                                    </Link>\r\n                                </nav>\r\n                            ): \r\n                                <nav className=\"header__action\">\r\n                                    <Link to=\"/cart\" className=\"header__action-cart\">\r\n                                        <img src=\"/assets/cart.svg\" alt=\"Comic book store cart\" />\r\n                                        Cart\r\n                                    </Link>\r\n                                    <Link to=\"/profile\" className=\"header__action-profile\">\r\n                                        <img src=\"/assets/user.svg\" alt=\"Comic book store profile\" />\r\n                                        Profile\r\n                                    </Link>\r\n                                    <Link to=\"\" onClick={this.logOut} className=\"header__action-logout\">\r\n                                        <img src=\"/assets/logout.svg\" alt=\"Comic book store logout\" />\r\n                                        Log Out\r\n                                    </Link>\r\n                                </nav>\r\n                        }\r\n                    </div>\r\n                </header>\r\n\r\n                <div className=\"container\">\r\n                    <Switch>\r\n                        <Route path='/sign-up' exact component={ProductRegister} />\r\n                        <Route path='/sign-in' exact component={ProductLogin} />\r\n                        \r\n                        <Route path='/' exact component={ProductsViewer} />\r\n                        <Route path='/product/:productId' exact component={ProductViewer} />\r\n                        <Route path='/search' exact component={ProductSearch} />\r\n                        <Route path='/profile' exact component={authRequired(ProductProfile)} />\r\n                        <Route path='/add' exact component={authRequired(ProductAdd)} />\r\n                        <Route path='/edit/:productId' exact component={authRequired(ProductEdit)} />\r\n                        <Route path='/cart' exact component={authRequired(ProductCart)} />\r\n                    </Switch>\r\n                </div>\r\n            </Fragment>\r\n         );\r\n    }\r\n}\r\n \r\nexport default Main;","import React from 'react';\r\nimport Main from './product-main';\r\n\r\nimport store from '../../store/store';\r\nimport {unSetUser, getUser} from '../../store/action-creators';\r\nimport { Provider, connect } from 'react-redux';\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuthorized: state.isAuthorized\r\n    }\r\n};\r\n\r\nlet ConnectedMain = connect(mapStateToProps, {getUser, unSetUser})(Main);\r\n\r\nexport default () => (\r\n    <Provider store={store}>\r\n        <ConnectedMain />\r\n    </Provider>\r\n);","import React from 'react';\nimport {BrowserRouter} from 'react-router-dom';\nimport Main from './pages/product-main';\nimport './index.css'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        <Main />      \n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport axios from 'axios';\n\naxios.interceptors.request.use(function(config){\n  if(localStorage.token) {\n    config.headers['Authorization'] = 'Bearer ' + localStorage.getItem('token');\n  } else {\n    config.headers['Authorization'] = null;\n  }\n\n  return config;\n});\n\nReactDOM.render(<App/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}